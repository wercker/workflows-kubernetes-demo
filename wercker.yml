box: node:4-slim

dev:
  steps:
    - script:
      name: setup node env
      code: export NODE_ENV=development

    - npm-install

    - internal/watch:
      code: npm start

build:
  steps:
    - install-packages:
      packages: bzip2

    - script:
      name: setup node env
      code: export NODE_ENV=development

    - npm-install

tests:
  steps:
    - install-packages:
      packages: libfreetype6 libfontconfig

    - script:
      name: setup node env
      code: export NODE_ENV=development

    - script:
      name: run tests
      code: npm test

release-build:
  steps:
    - script:
      name: forward deployment scripts
      code: mv "deployment" "$WERCKER_OUTPUT_DIR"

    - script:
      name: npm rebuild
      code: npm rebuild

    - script:
      name: build release code
      code: npm run build

    - script:
      name: prepare output
      code: mv ./build/* $WERCKER_OUTPUT_DIR

push-debug:
  steps:
    - internal/docker-push:
      repository: quay.io/strataconsulting/workflows-kubernetes-demo
      username: $DOCKER_USERNAME
      password: $DOCKER_PASSWORD
      registry: quay.io
      tag: debug-$WERCKER_GIT_COMMIT
      working-dir: /pipeline/source
      cmd: npm start

push-release:
  box:
    id: nginx:alpine
    cmd: /bin/sh

  steps:
    - script:
      name: forward deployment scripts
      code: mv "deployment" "$WERCKER_OUTPUT_DIR"

    - script:
      name: mv static files
      code: |
        rm -rf /usr/share/nginx/html/*
        mv $WERCKER_SOURCE_DIR/* /usr/share/nginx/html

    - script:
      name: cleanup build result
      code: rm -rf *

    - internal/docker-push:
      disable-sync: true
      repository: quay.io/strataconsulting/workflows-kubernetes-demo
      username: $DOCKER_USERNAME
      password: $DOCKER_PASSWORD
      registry: quay.io
      tag: release-$WERCKER_GIT_COMMIT
      cmd: nginx -g 'daemon off;'

kube-deploy:
  steps:
    - script:
      name: generate kube file
      cwd: deployment
      code: |
        cat todo-service.yml >> todo-kube.yml
        ./t.sh todo-deployment.template.yml >> todo-kube.yml
        cat todo-kube.yml

    - kubectl:
      cwd: deployment
      server: $KUBERNETES_MASTER
      username: $KUBERNETES_USERNAME
      password: $KUBERNETES_PASSWORD
      insecure-skip-tls-verify: true
      command: apply -f todo-kube.yml

    - script:
      name: cleanup
      cwd: deployment
      code: rm -rf ca.pem admin.pem admin-key.pem todo-kube.yml
